{
    "swagger": "2.0",
    "info": {
        "description": "This is a voda api server.",
        "title": "Voice Of Diary API (voda)",
        "contact": {
            "name": "API Support",
            "url": "https://minkj1992.github.io",
            "email": "minkj1992@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "exchange-diary-b4mzhzbzcq-du.a.run.app",
    "basePath": "/v1",
    "paths": {
        "/alarms": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "현재 로그인한 사용자의 알람 리스트\n* 교환일기 방의 주기에 따라 알람은 삭제된다. 즉 턴이 변경되면 알림들 제거 된다.\n* 실제 구현은 알람 생성 시 (room \u0026 member * code)유니크 검사를 통해서 중복 되는 알림코드는 제거 함으로써, 알람 row 숫자를 관리한다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alarms"
                ],
                "summary": "List alarms",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.AlarmListResponse"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "401": {
                        "description": ""
                    }
                }
            }
        },
        "/authentication/login/{auth_type}": {
            "get": {
                "description": "해당 auth_type의 login form을 기입 후, redirect되는 곳으로 기입한 email 그리고 요청한 auth_type에 대한 auth code를 발급한다.\n클라이언트 URL에 query string으로 auth code가 담긴 채로 redirect하여 로그인 및 회원가입이 진행되도록 한다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "kakao | google | apple",
                        "name": "auth_type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "301": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/authentication/mock": {
            "post": {
                "description": "클라 테스트용. 주어진 email이 db에 없으면 회원가입 프로세스 동시에 진행\nAccessToken을 사용해서 헤더에 {\"Authorization\": AccessToken} 넣어주면 된다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "(debug) mock login / register",
                "parameters": [
                    {
                        "description": "모킹할 유저정보",
                        "name": "member",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.mockMemberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.mockMemberResponse"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/login/{auth_type}": {
            "get": {
                "description": "요청한 auth_type의 login form URL로 redirect됩니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "LoginForm Redirect",
                "parameters": [
                    {
                        "type": "string",
                        "description": "kakao | google | apple",
                        "name": "auth_type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "301": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/member": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "member를 새로 생성한다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "members"
                ],
                "summary": "Member 생성",
                "parameters": [
                    {
                        "description": "member 생성 요청 body",
                        "name": "member",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.memberRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.memberResponse"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "해당 member를 수정한다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "members"
                ],
                "summary": "Member 수정",
                "parameters": [
                    {
                        "description": "member 수정 요청 body",
                        "name": "member",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.memberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.memberResponse"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/member/verify": {
            "get": {
                "description": "닉네임이 중복인지 아닌지 검사한다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "members"
                ],
                "summary": "Member 닉네임 중복 검사",
                "parameters": [
                    {
                        "type": "string",
                        "description": "nick name to verify",
                        "name": "nickname",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/member/{email}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "email 주소를 통해 가입된 member를 조회한다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "members"
                ],
                "summary": "Member 조회",
                "parameters": [
                    {
                        "type": "string",
                        "description": "사용자 이메일",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.memberResponse"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "해당 member를 삭제한다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "members"
                ],
                "summary": "Member 삭제",
                "parameters": [
                    {
                        "type": "string",
                        "description": "사용자 이메일",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/rooms": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "참여중인 교환일기방 리스트",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "List rooms",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/application.JSONSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/controller.listResponseRoom"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400101": {
                        "description": "엔티티낫파운드",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/application.JSONBadResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "교환일기방 생성",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "create a room",
                "parameters": [
                    {
                        "description": "교환일기방 생성요청 body",
                        "name": "room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.postRequestRoom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.postResponseRoom"
                        }
                    },
                    "400": {
                        "description": ""
                    }
                }
            }
        },
        "/rooms/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "교환일기방 상세\nmembers는 교환일기방에 참여한 순서로 정렬된다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "get a room",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "uint",
                        "description": "교환일기방 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.detailResponseRoom"
                        }
                    },
                    "400": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "교환일기방 삭제",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "(debug only) delete a room",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "교환일기방 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "교환일기방 업데이트 (master only)\n1. 작성주기 변경 (period)\n2. 코드/힌트 변경 (code, hint)\n3. 작성순서 변경(orders) : member id를 array로 넣어주면 된다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "update a room",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "교환일기방 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "교환일기방 수정 요청 body",
                        "name": "room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.patchRequestRoom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.patchResponseRoom"
                        }
                    },
                    "400": {
                        "description": ""
                    }
                }
            }
        },
        "/rooms/{id}/join": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "교환일기방 참여코드 체크 후, 교환일기방 멤버로 추가",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "join a room",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "교환일기방 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "교환일기방 참여 요청 body",
                        "name": "room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.verifyRequestRoom"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "401": {
                        "description": ""
                    }
                }
            }
        },
        "/rooms/{id}/leave": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "교환일기방 나가기\n1. 교환일기방 마스터일 경우\n2. 교환일기방 멤버일 경우",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "leave a room",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "교환일기방 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    }
                }
            }
        },
        "/rooms/{id}/orders": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "교환일기방 작성 순서\norders는 교환일기방의 다이어리 작성 순서로 정렬된다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Get room orders",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "uint",
                        "description": "교환일기방 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.roomOrderResponse"
                        }
                    },
                    "400": {
                        "description": ""
                    }
                }
            }
        },
        "/rooms/{room_id}/files": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "파일 업로드",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "upload static files",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Room ID",
                        "name": "room_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "1.5",
                        "name": "audioPitch",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "LastDayOnEarth",
                        "name": "audioTitle",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "ad5bb198-942f-4ddf-a248-3aaa4bba3b9b",
                        "name": "audioUUID",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "e4947e0c-490b-4588-a14d-e74dd3b8371f",
                        "name": "photoUUID",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "photo",
                        "name": "photo",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "audio",
                        "name": "audio",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.filePostResponse"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tasks/callback": {
            "post": {
                "description": "google cloud task에 예약 해두었던, task들을 스케쥴된 일정시간이 지난뒤, 처리해주는 callback handler api endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Handle Event Task",
                "parameters": [
                    {
                        "description": "Task Http Body",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.taskRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted. It ignore request, because error occured. 정상 처리(204)와 차이점을 두기 위해서 202로 처리함"
                    },
                    "204": {
                        "description": "successfully finished callback task."
                    }
                }
            }
        },
        "/tasks/mock": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Mock Handle Event Task",
                "parameters": [
                    {
                        "description": "Task Http Body",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.taskRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted. It ignore request, because error occured. 정상 처리(204)와 차이점을 두기 위해서 202로 처리함"
                    },
                    "204": {
                        "description": "successfully finished callback task."
                    }
                }
            }
        },
        "/token": {
            "post": {
                "description": "AuthCode를 전달하여, access \u0026 refresh 토큰을 발급 받는다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "JWT 토큰 발급",
                "parameters": [
                    {
                        "description": "발급받은 AuthCode",
                        "name": "room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.TokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.tokenResponse"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/token/refresh": {
            "get": {
                "description": "refresh token을 전달하여, accessToken을 재발급받는다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "AccessToken 재발급",
                "parameters": [
                    {
                        "description": "refresh 토큰",
                        "name": "room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.TokenRefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.tokenResponse"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "application.JSONBadResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 40001
                },
                "message": {
                    "type": "string",
                    "example": "4xx errors"
                }
            }
        },
        "application.JSONSuccessResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Ok"
                }
            }
        },
        "controller.AlarmListResponse": {
            "type": "object",
            "properties": {
                "alarms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.responseAlarm"
                    }
                }
            }
        },
        "controller.TokenRefreshRequest": {
            "type": "object",
            "properties": {
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "controller.TokenRequest": {
            "type": "object",
            "properties": {
                "authCode": {
                    "type": "string"
                },
                "deviceToken": {
                    "type": "string"
                }
            }
        },
        "controller.detailResponseRoom": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "hint": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isMaster": {
                    "type": "boolean"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.responseMember"
                    }
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "theme": {
                    "type": "string"
                },
                "turnAccountId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "controller.filePostResponse": {
            "type": "object",
            "properties": {
                "audioDownloadURL": {
                    "type": "string"
                },
                "audioURL": {
                    "type": "string"
                },
                "photoDownloadURL": {
                    "type": "string"
                },
                "photoURL": {
                    "type": "string"
                }
            }
        },
        "controller.listResponseRoom": {
            "type": "object",
            "properties": {
                "rooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.responseRoom"
                    }
                }
            }
        },
        "controller.memberRequest": {
            "type": "object",
            "properties": {
                "alarm_flag": {
                    "type": "boolean"
                },
                "auth_type": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "profile_url": {
                    "type": "string"
                }
            }
        },
        "controller.memberResponse": {
            "type": "object",
            "properties": {
                "alarm_flag": {
                    "type": "boolean"
                },
                "auth_type": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "profile_url": {
                    "type": "string"
                }
            }
        },
        "controller.mockMemberRequest": {
            "type": "object",
            "properties": {
                "deviceToken": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "controller.mockMemberResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authCode": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "controller.patchRequestRoom": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "hint": {
                    "type": "string"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "period": {
                    "type": "integer"
                }
            }
        },
        "controller.patchResponseRoom": {
            "type": "object",
            "properties": {
                "roomId": {
                    "type": "integer"
                }
            }
        },
        "controller.postRequestRoom": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "제민욱"
                },
                "hint": {
                    "type": "string",
                    "example": "레오의 본명은?"
                },
                "name": {
                    "type": "string",
                    "example": "고영희방"
                },
                "period": {
                    "type": "integer",
                    "example": 5
                },
                "theme": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "controller.postResponseRoom": {
            "type": "object",
            "properties": {
                "roomId": {
                    "type": "integer"
                }
            }
        },
        "controller.responseAlarm": {
            "type": "object",
            "properties": {
                "alarmAt": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "roomName": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "controller.responseMember": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "nickName": {
                    "type": "string"
                },
                "profileUrl": {
                    "type": "string"
                }
            }
        },
        "controller.responseRoom": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.responseMember"
                    }
                },
                "name": {
                    "type": "string"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "controller.roomOrderResponse": {
            "type": "object",
            "properties": {
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.responseMember"
                    }
                },
                "turnAccountId": {
                    "type": "integer"
                }
            }
        },
        "controller.taskRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "enum": [
                        "ROOM_PERIOD_FIN",
                        "MEMBER_ON_DUTY",
                        "MEMBER_BEFORE_1HR",
                        "MEMBER_BEFORE_4HR",
                        "MEMBER_POSTED_DIARY"
                    ]
                },
                "email": {
                    "type": "string"
                },
                "room_id": {
                    "type": "integer"
                }
            }
        },
        "controller.tokenResponse": {
            "type": "object",
            "properties": {
                "accesstoken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "controller.verifyRequestRoom": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}